name: Build and Publish
on:
  push:
    branches: [ master, BAH-1798 ]
    paths-ignore:
      - '**.md'
  repository_dispatch:
    types: ['bahmni-embedded-tomcat-trigger']

env:
  HELM_CHART_PATH: package/helm/

jobs:
  docker-build-publish:
    name: Docker Build & Publish
    # MySQL dist 5.7 comes preinstalled on ubuntu-18.04. Ubuntu-latest have dist 20.x
    runs-on: ubuntu-18.04
    env:
      DB_DATABASE: reports_integration_tests
      DB_USER: root
      DB_PASSWORD: root
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Verify app version
        run: |
          APP_VERSION=$(cat package/.appversion)
          if [ $(git tag -l "$APP_VERSION") ]; then
            echo "App version $APP_VERSION already released. Please update app version in package/.appversion to represent next major/minor/patch increment"
            exit 1
          else
            echo "setting artifact version to $(echo $APP_VERSION-${{github.run_number}})"
            echo "ARTIFACT_VERSION=$(echo $APP_VERSION-${{github.run_number}})" >> $GITHUB_ENV
          fi
      - name: Setup Java 8
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '8'
# OpenMRS 2.1.6 and its corresponding schema dump is on MySql 5.6. There are breaking changes between 5.6 and 5.7
# e.g. only_full_group_by is enabled by default
# We are mutating global and session sql_mode as workaround to make 5.7 almost similar to 5.6 
# since there isnt any official Ubuntu image supported by GHA that runs mysql 5.6
# POst OMRS upgrade to 2.5, this needs to be revisited
      - name: start MySQL
        run: |
          sudo systemctl start mysql.service
          mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
          mysql -uroot -proot reports_integration_tests -e "set global sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';"
          mysql -uroot -proot reports_integration_tests -e "set session sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';"
      - name: Test and Package
        run:
          ./mvnw --no-transfer-progress -DskipDump=false -DskipConfig=false clean package
      - name: Download bahmni-embedded-tomcat.zip
        run: |
          sh .github/download_artifact.sh bahmni-package bahmni-embedded-tomcat ${{secrets.BAHMNI_PAT}}
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Docker Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: package/docker/bahmni-reports/Dockerfile
          push: true
          tags: bahmni/reports:${{env.ARTIFACT_VERSION}},bahmni/reports:latest

      - name: Helm - Update Version and Image Tag
        run: |
          yq --inplace '.image.tag = "${{ env.ARTIFACT_VERSION }}"' $HELM_CHART_PATH/values.yaml
          yq --inplace '.version = "${{ env.ARTIFACT_VERSION }}"' $HELM_CHART_PATH/Chart.yaml

      - name: Helm Lint
        run: helm lint $HELM_CHART_PATH

      - name: Helm Package
        run: helm package $HELM_CHART_PATH

      - name: Helm - Checkout Charts Repository
        uses: actions/checkout@v2
        with:
          repository: Bahmni/helm-charts
          ref: gh-pages
          path: helm-charts
          persist-credentials: false

      - name: Helm - Copy chart
        run: mkdir -p helm-charts/reports/ && cp reports-${{ env.ARTIFACT_VERSION }}.tgz helm-charts/reports/

      - name: Helm - reIndex
        working-directory: helm-charts/
        run: helm repo index --merge index.yaml --url https://bahmni.github.io/helm-charts/  .

      - name: Helm - Publish Chart
        working-directory: helm-charts/
        run: |
          git config user.name ${{ secrets.BAHMNI_USERNAME}}
          git config user.email ${{ secrets.BAHMNI_EMAIL}}
          git add .
          git commit -m "Release of reports-${{ env.ARTIFACT_VERSION }}"
          git push 'https://${{ secrets.BAHMNI_USERNAME}}:${{ secrets.BAHMNI_PAT}}@github.com/bahmni/helm-charts.git' gh-pages
